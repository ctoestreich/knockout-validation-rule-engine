/*! knockout-valdiation-rule-engine - v1.0.0 - 2013-12-09
* Copyright (c) 2013 Christian Oestreich; Licensed MIT */
(function(e){"function"==typeof require&&"object"==typeof exports&&"object"==typeof module?e(require("knockout"),require("knockout.validation"),exports):"function"==typeof define&&define.amd?define(["knockout","knockout.validation","exports"],e):e(ko,ko.validation,ko.RuleEngine={})})(function(e,t,i){if(void 0===typeof e)throw"Knockout is required, please ensure it is loaded before loading this plug-in";if(void 0===typeof t)throw"Knockout.Validation is required, please ensure it is loaded before loading this plug-in";var r={deep:!0};return i=function(t,i){function n(e,r){r&&l.extend(t,r),c(e,i)}function o(e){return t[e]||{}}function a(t,i){e.validation.rules[t]=i,e.validation.registerExtenders()}function s(e){l.extend(t,e||{})}function u(t){i=l.extend(r,t),e.validation.init(i)}function c(t,i){var r=[],n=l.unwrapObservable(t);e.isObservable(t)&&!t.isValid&&t.extend({validatable:!0}),n&&(d(n)||p(n))&&(r=n),l.objectForEach(r,function(t,r){var n=o(t);n&&e.isObservable(r)&&r.extend(n),i.deep&&void 0!==r&&!e.isObservable(r)&&c(r,i)})}function d(e){return e.isArray||"[object Array]"===Object.prototype.toString.call(e)}function p(e){return null!==e&&"object"==typeof e}var l=e.utils;return i=i||{},t=t||{},u(i),{addRule:a,addRuleSet:s,apply:n,getFieldRuleSet:o,registerExtenders:e.validation.registerExtenders,ruleSet:t,rules:e.validation.rules}},e.RuleEngine=i,e.RuleEngine});