/*! knockout-valdiation-rule-engine - v1.0.0 - 2013-12-04
* Copyright (c) 2013 Christian Oestreich; Licensed MIT */
(function(e){"function"==typeof require&&"object"==typeof exports&&"object"==typeof module?e(require("knockout"),require("knockout.validation"),exports):"function"==typeof define&&define.amd?define(["knockout","knockout.validation","exports"],e):e(ko,ko.validation,ko.RuleEngine={})})(function(e,t,i){if(void 0===typeof e)throw"Knockout is required, please ensure it is loaded before loading this plug-in";if(void 0===typeof t)throw"Knockout.Validation is required, please ensure it is loaded before loading this plug-in";return i=function(t,i){function n(e,n){n&&p.extend(t,n),u(e,i)}function r(e){return t[e]||{}}function o(t,i){e.validation.rules[t]=i,e.validation.registerExtenders()}function a(e){p.extend(t,e||{})}function s(t){e.validation.init(t)}function u(t,i){var n=[],o=p.unwrapObservable(t);e.isObservable(t)&&!t.isValid&&t.extend({validatable:!0}),o&&(c(o)||d(o))&&(n=o),p.objectForEach(n,function(t,n){var o=r(t);o&&e.isObservable(n)&&n.extend(o),i.deep&&void 0!==n&&!e.isObservable(n)&&u(n,i)})}function c(e){return e.isArray||"[object Array]"===Object.prototype.toString.call(e)}function d(e){return null!==e&&"object"==typeof e}var p=e.utils;return i=i||{},t=t||{},i=p.extend({insertMessages:!0,messagesOnModified:!0,deep:!0},i),s(i),{addRule:o,addRuleSet:a,apply:n,getFieldRuleSet:r,registerExtenders:e.validation.registerExtenders,ruleSet:t,rules:e.validation.rules}},e.RuleEngine=i,e.RuleEngine});